[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# reset_blinds
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "G.GAME.round_resets.blind_choices.Boss = get_new_boss()"
position = "at"
match_indent = true
payload = '''
if #SMODS.find_card("j_manifold_rebellion") % 2 == 1 then
    G.GAME.round_resets.blind_choices.Small = get_new_boss()
    G.GAME.round_resets.blind_choices.Boss = "bl_small"
else
    G.GAME.round_resets.blind_choices.Boss = get_new_boss()
end
'''

# reroll_boss
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.GAME.round_resets.blind_choices.Boss = get_new_boss()"
position = "at"
match_indent = true
payload = '''
G.GAME.round_resets.blind_choices[#SMODS.find_card("j_manifold_rebellion") % 2 == 1 and "Small" or "Boss"] = get_new_boss()
'''

# end_round
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.round_resets.blind == G.P_BLINDS.bl_small then"
position = "at"
match_indent = true
payload = '''
if G.GAME.blind_on_deck == "Small" then
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "elseif G.GAME.round_resets.blind == G.P_BLINDS.bl_big then"
position = "at"
match_indent = true
payload = '''
elseif G.GAME.blind_on_deck == "Big" then
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.blind:get_type() == 'Boss' then"
position = "at"
match_indent = true
payload = '''
if G.GAME.blind_on_deck == "Boss" then
'''