[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# reset_blinds
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "G.GAME.round_resets.blind_choices.Boss = get_new_boss()"
position = "at"
match_indent = true
payload = '''
if #SMODS.find_card("j_manifold_rebellion") % 2 == 1 then
    G.GAME.round_resets.blind_choices.Small = get_new_boss()
    G.GAME.round_resets.blind_choices.Boss = "bl_small"
else
    G.GAME.round_resets.blind_choices.Boss = get_new_boss()
end
'''

# G.FUNCS.reroll_boss
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.CONTROLLER.locks.boss_reroll = true"
position = "after"
match_indent = true
payload = '''
local target_u = "Small"
if G.P_BLINDS[G.GAME.round_resets.blind_choices.Boss].boss then
    target_u = "Boss"
elseif G.P_BLINDS[G.GAME.round_resets.blind_choices.Big].boss then
    target_u = "Big"
end
local target = target_u:lower()
'''

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
G.blind_select_opts.boss:set_role({xy_bond = 'Weak'})
G.blind_select_opts.boss.alignment.offset.y = 20
'''
position = "at"
match_indent = true
payload = '''
G.blind_select_opts[target]:set_role({xy_bond = 'Weak'})
G.blind_select_opts[target].alignment.offset.y = 20
'''

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
local par = G.blind_select_opts.boss.parent
G.GAME.round_resets.blind_choices.Boss = get_new_boss()

G.blind_select_opts.boss:remove()
G.blind_select_opts.boss = UIBox{
'''
position = "at"
match_indent = true
payload = '''
local par = G.blind_select_opts[target].parent
G.GAME.round_resets.blind_choices[target_u] = get_new_boss()
G.blind_select_opts[target]:remove()
G.blind_select_opts[target] = UIBox{
'''

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
par.config.object = G.blind_select_opts.boss
par.config.object:recalculate()
G.blind_select_opts.boss.parent = par
G.blind_select_opts.boss.alignment.offset.y = 0
'''
position = "at"
match_indent = true
payload = '''
par.config.object = G.blind_select_opts[target]
par.config.object:recalculate()
G.blind_select_opts[target].parent = par
G.blind_select_opts[target].alignment.offset.y = 0
'''

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "UIBox_dyn_container({create_UIBox_blind_choice('Boss')},false,get_blind_main_colour('Boss'), mix_colours(G.C.BLACK, get_blind_main_colour('Boss'), 0.8))"
position = "at"
match_indent = true
payload = '''
UIBox_dyn_container({create_UIBox_blind_choice(target_u)}, false, get_blind_main_colour(target_u), mix_colours(G.C.BLACK, get_blind_main_colour(target_u), 0.8))
'''

# Game:start_run
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.GAME.round_resets.blind_choices.Boss = get_new_boss()"
position = "at"
match_indent = true
payload = '''
if #SMODS.find_card("j_manifold_rebellion") % 2 == 1 then
    self.GAME.round_resets.blind_choices.Small = get_new_boss()
    self.GAME.round_resets.blind_choices.Boss = "bl_small"
else
    self.GAME.round_resets.blind_choices.Boss = get_new_boss()
end
'''

# end_round and new_round
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.round_resets.blind == G.P_BLINDS.bl_small then"
position = "at"
match_indent = true
payload = '''
if G.GAME.blind_on_deck == "Small" then
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "elseif G.GAME.round_resets.blind == G.P_BLINDS.bl_big then"
position = "at"
match_indent = true
payload = '''
elseif G.GAME.blind_on_deck == "Big" then
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.blind:get_type() == 'Boss' then"
position = "at"
match_indent = true
payload = '''
if G.GAME.blind_on_deck == "Boss" then
'''