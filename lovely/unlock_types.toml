[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# sacrifice
# Card:calculate_joker
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local sliced_card = G.jokers.cards[my_pos+1]"
position = "after"
match_indent = true
payload = '''
check_for_unlock{type = "sacrifice", name = sliced_card.ability.name}
'''

# exit_run
# G.FUNCS.go_to_menu
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.FUNCS.go_to_menu = function(e)"
position = "after"
match_indent = true
payload = '''
    if G.STATE ~= G.STATES.GAME_OVER and not G.GAME.won then
        G.E_MANAGER:add_event(Event{no_delete = true, func = function()
            G.E_MANAGER:add_event(Event{no_delete = true, func = function()
                check_for_unlock{type = "exit_run"}
                return true end})
            return true end})
    end
'''

# lose
# Game:update_game_over
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "set_joker_loss()"
position = "after"
match_indent = true
payload = '''
check_for_unlock{type = "lose"}
'''

# j_splash
# Card:add_to_deck
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.name == 'Chicot' and G.GAME.blind and G.GAME.blind.boss and not G.GAME.blind.disabled then"
position = "before"
match_indent = true
payload = '''
if self.ability.name == "Splash" then
    check_for_unlock{type = "j_splash", quantity = #SMODS.find_card("j_splash") + 1}
end
'''